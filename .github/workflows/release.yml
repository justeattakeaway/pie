name: Release Stable Packages

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        # Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      # Restore node_modules if cache exists. If not, cache is created at end of build.
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
      # Run 'yarn' if cache doesn't exist. Use --prefer-offline to download packages from yarn cache folder where possible
      - name: Install Dependencies
        run: yarn add --cached
      - name: Check for pre.json file existence
        id: check_files
        uses: andstor/file-existence-action@v2.0.0
        with:
          files: ".changeset/pre.json"
      - name: exit prerelease mode
        # If .changeset/pre.json does not exist and we did not recently exit
        # prerelease mode, enter prerelease mode with tag alpha
        if: steps.check_files.outputs.files_exists == 'true'
        run: npx changeset pre exit
      - name: Create release PR
        uses: changesets/action@v1
        with:
          version: yarn version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HUSKY: 0




      # - name: Create Release Pull Request
      #   uses: changesets/action@v1
      #   with:
      #     # this expects you to have a npm script called version that runs some logic and then calls `changeset version`.
      #     version: yarn version
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}