name: Release Stable Packages

on:
  push:
    branches:
      - main-dummy-version-pr

permissions:
  contents: write
  pull-requests: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    if: github.repository == 'justeattakeaway/pie'
    name: release
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Append NPM token to .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Setup Node
        # Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      # Restore node_modules if cache exists. If not, cache is created at end of build.
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
      # Run 'yarn' if cache doesn't exist. Use --prefer-offline to download packages from yarn cache folder where possible
      - name: Install Dependencies
        run: yarn add --cached
      - name: Check for pre.json file existence
        id: check_files
        uses: andstor/file-existence-action@v2.0.0
        with:
          files: ".changeset/pre.json"
      - name: exit prerelease mode
        # If .changeset/pre.json does not exist and we did not recently exit
        # prerelease mode, enter prerelease mode with tag alpha
        if: steps.check_files.outputs.files_exists == 'true'
        run: npx changeset pre exit
      - name: Create latest release PR
        uses: changesets/action@v1
        with:
          version: yarn changeset:version
          publish: yarn changeset:publish
          title: 'Version Packages (latest)'
          commit: "Version Packages with 'latest' tag"

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      HUSKY: 0