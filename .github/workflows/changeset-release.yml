name: Changeset Release

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      node-version:
        required: true
        type: string

concurrency:
  group: changeset-release-${{ github.ref }}
  cancel-in-progress: true

env:
  HUSKY: 0
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.CHANGESETS_TOKEN }}

jobs:
  changesets:
    runs-on: ${{ inputs.os }}
    if: github.repository == 'justeattakeaway/pie' && ${{ github.event_name != 'pull_request' }} &&
      (contains(github.ref_name, 'main') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'feature'))
    steps:
    # Checkout the Repo
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: false
    # Setup Repo
    - name: Setup Repo
      uses: ./.github/actions/setup-repo
      with:
        node-version: ${{ inputs.node-version }}
        os: ${{ inputs.os }}
    - name: Append NPM token to .npmrc
      run: |
        cat << EOF > "$HOME/.npmrc"
          //registry.npmjs.org/:_authToken=$NPM_TOKEN
        EOF
    # Build Packages
    - name: Build
      if: ${{ github.event_name != 'pull_request' }} &&
        (contains(github.ref_name, 'main') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'feature'))
      uses: ./.github/actions/run-script
      with:
        script-name: "build"
    - name: Check for pre.json file existence
      id: check_files
      uses: andstor/file-existence-action@v2.0.0
      with:
        files: ".changeset/pre.json"
    - name: exit prerelease mode
      # If .changeset/pre.json does not exist and we did not recently exit
      # prerelease mode.
      if: steps.check_files.outputs.files_exists == 'true' && contains(github.ref_name, 'main')
      run: npx changeset pre exit
    - name: Create latest release PR
      if: contains(github.ref_name, 'main')
      uses: changesets/action@v1
      with:
        version: yarn changeset:version
        publish: yarn changeset:publish
        commit: "release: release packages with 'latest' tag"
    # If .changeset/pre.json does not exist and we did not recently exit
    # prerelease mode, enter prerelease mode with tag beta
    - name: Enter beta prerelease mode
      if: steps.check_files.outputs.files_exists == 'false' && contains(github.ref_name, 'beta')
      # If .changeset/pre.json does not exist and we did not recently exit
      # prerelease mode, enter prerelease mode with tag beta
      run: npx changeset pre enter beta
    - name: Create beta release PR
      if: contains(github.ref_name, 'beta')
      uses: changesets/action@v1
      with:
        version: yarn changeset:version
        publish: yarn changeset:publish
        commit: "release: release packages with 'beta' tag"
    - name: Enter feature prerelease mode
      if: steps.check_files.outputs.files_exists == 'false' && contains(github.ref_name, 'feature')
      # If .changeset/pre.json does not exist and we did not recently exit
      # prerelease mode, enter prerelease mode with tag next
      run: npx changeset pre enter next
    - name: Create feature release PR
      if: contains(github.ref_name, 'feature')
      uses: changesets/action@v1
      with:
        version: yarn changeset:version
        publish: yarn changeset:publish
        commit: "release: release packages with 'next' tag"
