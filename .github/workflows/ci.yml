name: Build

on:
  pull_request:
    types: [assigned, opened, synchronize, reopened, "ready_for_review"]
    paths-ignore:
      - ".husky/**"
      - ".idea/**"
      - "stories/**"
      - ".vscode/**"
      - "README.md"
      - "CONTRIBUTING.md"
      - "CHANGELOG.md"
      - "LICENSE"

  push:
    branches:
      - main
      - beta-*
      - feature-*

concurrency:
  group: CI-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCS_AMPLIFY_ID: dvskdcoepjoyf
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  STORYBOOK_AMPLIFY_ID: d17ja0ul7nrdy0
  HUSKY: 0
  PERCY_TOKEN_PIE_DOCS: ${{ secrets.PERCY_TOKEN_PIE_DOCS }}
  PERCY_TOKEN_PIE_BUTTON: ${{ secrets.PERCY_TOKEN_PIE_BUTTON }}
  PR_NUMBER: ${{ github.event.number }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  dependency-changeset:
    if: github.actor == 'renovate-bot' || github.actor == 'renovate[bot]'
    uses: the-guild-org/shared-config/.github/workflows/changesets-dependencies.yaml@main
    secrets:
      githubToken: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu-node-16:
    uses: ./.github/workflows/install-build.yml
    with:
      os: ubuntu-latest
      node-version: 16
    secrets: inherit

  build-windows-node-16:
    uses: ./.github/workflows/install-build.yml
    with:
      os: windows-latest
      node-version: 16
    secrets: inherit

  build-ubuntu-node-18:
    uses: ./.github/workflows/install-build.yml
    with:
      os: ubuntu-latest
      node-version: 18
    secrets: inherit

  build-windows-node-18:
    uses: ./.github/workflows/install-build.yml
    with:
      os: windows-latest
      node-version: 18
    secrets: inherit

  lint-styles:
    needs: build-ubuntu-node-18
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
      # Setup Repo
      - name: Setup Repo
        uses: ./.github/actions/setup-repo
        with:
          node-version: 18
          os: ubuntu-latest
      # Lint Styles
      - name: Lint Styles
        uses: ./.github/actions/run-script
        with:
          script-name: "lint:style"
          concurrency: 10

  lint-js:
    needs: build-ubuntu-node-18
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
      # Setup Repo
      - name: Setup Repo
        uses: ./.github/actions/setup-repo
        with:
          node-version: 18
          os: ubuntu-latest
      # Restore Packages from Cache
      - name: Build Packages
        uses: ./.github/actions/run-script
        with:
          script-name: "build"
      # Lint JS
      - name: Lint JavaScript
        uses: ./.github/actions/run-script
        with:
          script-name: "lint:scripts"

  unit-tests:
    needs: lint-js
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
      # Setup Repo
      - name: Setup Repo
        uses: ./.github/actions/setup-repo
        with:
          node-version: 18
          os: ubuntu-latest
      # Restore Packages from Cache
      - name: Build Packages
        uses: ./.github/actions/run-script
        with:
          script-name: "build"
      # Run Unit Tests
      - name: Unit Tests
        uses: ./.github/actions/run-script
        with:
          script-name: "test:ci"

  deploy-docs:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
      # Setup Repo
      - name: Setup Repo
        uses: ./.github/actions/setup-repo
        with:
          node-version: 18
          os: ubuntu-latest
      # Build Docs Site
      - name: Build Docs Site
        uses: ./.github/actions/run-script
        with:
          script-name: "build"
          package-name: "pie-docs"
      # Create Github Deployment
      - name: Create Docs GitHub deployment
        if: ${{ github.event_name == 'pull_request' }}
        uses: chrnorm/deployment-action@v2
        id: docs-deploy
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: "pie-docs-pr-${{ github.event.number }}"
      # Amplify Deploy
      - name: Amplify Deploy
        if: ${{ github.event_name == 'pull_request' }}
        uses: ./.github/actions/amplify-deploy
        with:
          amplify-app-id: ${{ env.DOCS_AMPLIFY_ID }}
          aws-region: 'eu-west-1'
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          branch-name: 'pr${{ github.event.number }}'
          bucket-name: ${{ secrets.AWS_DOCS_BUCKET }}
          package-name: 'pie-docs'
      # If successful
      - name: Update deployment status (success)
        if: ${{ github.event_name == 'pull_request' && success() }}
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: https://pr${{ github.event.number }}.${{ env.DOCS_AMPLIFY_ID }}.amplifyapp.com
          deployment-id: ${{ steps.docs-deploy.outputs.deployment_id }}
          state: "success"
      # If it failed
      - name: Update deployment status (failure)
        if: ${{ github.event_name == 'pull_request' && failure() }}
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: https://pr${{ github.event.number }}.${{ env.DOCS_AMPLIFY_ID }}.amplifyapp.com
          deployment-id: ${{ steps.docs-deploy.outputs.deployment_id }}
          state: "failure"
      # Main deployment
      - name: Deploy Main (Amplify)
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: ./.github/actions/amplify-deploy
        with:
          amplify-app-id: ${{ env.DOCS_AMPLIFY_ID }}
          aws-region: 'eu-west-1'
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          branch-name: 'main'
          bucket-name: ${{ secrets.AWS_DOCS_MAIN_BUCKET }}
          package-name: 'pie-docs'

  deploy-storybook:
    # This will depend on build once we've migrated off Github Pages
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
      # Setup Repo
      - name: Setup Repo
        uses: ./.github/actions/setup-repo
        with:
          node-version: 18
          os: ubuntu-latest
      # Build Storybook
      - name: Build Storybook
        uses: ./.github/actions/run-script
        with:
          script-name: "build"
          package-name: "pie-storybook"
      # Deployments
      - name: Create Storybook GitHub deployment
        if: ${{ github.event_name == 'pull_request' }}
        uses: chrnorm/deployment-action@v2
        id: storybook-deploy
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: "pie-storybook-pr-${{ github.event.number }}"
      # Amplify Deploy
      - name: Amplify Deploy
        if: ${{ github.event_name == 'pull_request' }}
        uses: ./.github/actions/amplify-deploy
        with:
          amplify-app-id: ${{ env.STORYBOOK_AMPLIFY_ID }}
          aws-region: 'eu-west-1'
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          branch-name: 'pr${{ github.event.number }}'
          bucket-name: '${{ secrets.AWS_STORYBOOK_BUCKET }}'
          package-name: 'pie-storybook'
      # If successful
      - name: Update deployment status (success)
        if: ${{ github.event_name == 'pull_request' && success() }}
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: https://pr${{ github.event.number }}.${{ env.STORYBOOK_AMPLIFY_ID }}.amplifyapp.com
          deployment-id: ${{ steps.storybook-deploy.outputs.deployment_id }}
          state: "success"
      # If it failed
      - name: Update deployment status (failure)
        if: ${{ github.event_name == 'pull_request' && failure() }}
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: https://pr${{ github.event.number }}.${{ env.STORYBOOK_AMPLIFY_ID }}.amplifyapp.com
          deployment-id: ${{ steps.storybook-deploy.outputs.deployment_id }}
          state: "failure"
      # Main deployment
      - name: Deploy Main (Amplify)
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: ./.github/actions/amplify-deploy
        with:
          amplify-app-id: ${{ env.STORYBOOK_AMPLIFY_ID }}
          aws-region: 'eu-west-1'
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          branch-name: 'main'
          bucket-name: ${{ secrets.AWS_STORYBOOK_MAIN_BUCKET }}
          package-name: 'pie-storybook'

  browser-tests:
    needs: deploy-docs
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Setup Repo
      - name: Setup Repo
        uses: ./.github/actions/setup-repo
        with:
          node-version: 18
          os: ubuntu-latest
      # Setup Playwright
      - name: Setup Playwright
        uses: ./.github/actions/setup-playwright
      # Run System / a11y Tests
      - name: Run All System / Component /  a11y Tests
        uses: ./.github/actions/run-script
        with:
          script-name: "test:browsers:ci"
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: browsers-report
          path: browsers-report/
          retention-days: 7
      # Run Visual Tests
      - name: Run All Visual Tests
        uses: ./.github/actions/run-script
        with:
          script-name: "test:visual:ci"
          concurrency: 1
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: visual-report
          path: visual-report/
          retention-days: 7

  release:
    needs: [ 'unit-tests', 'lint-js']
    if: github.repository == 'justeattakeaway/pie' &&
      ${{ github.event_name != 'pull_request' }} &&
      (contains(github.ref_name, 'main') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'feature'))
    name: release
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Setup Repo
      - name: Setup Repo
        uses: ./.github/actions/setup-repo
        with:
          node-version: 18
          os: ubuntu-latest
      - name: Append NPM token to .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
      # Build Packages
      - name: Build Docs
        if: ${{ github.event_name != 'pull_request' }} &&
          (contains(github.ref_name, 'main') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'feature'))
        uses: ./.github/actions/run-script
        with:
          script-name: "build"
      - name: Changeset Release
        uses: ./.github/actions/changeset-release
