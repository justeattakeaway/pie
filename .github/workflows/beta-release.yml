name: Version / Release Beta packages

on:
  push:
    branches:
      - beta-*

permissions:
  contents: write
  pull-requests: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  beta-release:
    if: github.repository == 'justeattakeaway/pie'
    name: Beta Release
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Append NPM token to .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
      - name: Setup Node
        # Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      # Restore node_modules if cache exists. If not, cache is created at end of build.
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
      # Run 'yarn' if cache doesn't exist. Use --prefer-offline to download packages from yarn cache folder where possible
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn add --cached
      - name: Check for pre.json file existence
        id: check_files
        uses: andstor/file-existence-action@v2.0.0
        with:
          files: ".changeset/pre.json"
      - name: Enter beta prerelease mode
        # If .changeset/pre.json does not exist and we did not recently exit
        # prerelease mode, enter prerelease mode with tag beta
        if: steps.check_files.outputs.files_exists == 'false'
        run: npx changeset pre enter beta
      - name: Create beta release PR
        uses: changesets/action@v1
        with:
          version: yarn changeset:version
          commit: "Version Packages with 'beta' tag"
      - name: Run publish
        id: changesets
        # Only run publish if we're still in pre mode and the last commit was
        # via an automatically created Version Packages PR
        if: steps.check_files.outputs.files_exists == 'true' && startsWith(github.event.head_commit.message, 'Version Packages')
        run: yarn changeset:publish
      - name: Create alpha release PR
        uses: changesets/action@v1
        with:
          version: npm run changeset-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Run publish
        id: changesets
        # Only run publish if we're still in pre mode and the last commit was
        # via an automatically created Version Packages PR
        if: steps.check_files.outputs.files_exists == 'true' && startsWith(github.event.head_commit.message, 'Version Packages')
        run: npm run changeset-publish

      - name: Send a Slack notification on publish
        if: steps.changesets.outcome == 'success'
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # Slack channel id, channel name, or user id to post message
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing
          # a comma-delimited list of channel IDs
          channel-id: 'C01PS0CB41G'
          # For posting a simple plain text message
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "A new version of `@apollo/client` was released :rocket:"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Version:*\n`${{ steps.package-version.outputs.current-version}}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Tag:*\n`alpha`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*GitHub release:*\nN/A"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*npm releases:*\n<https://www.npmjs.com/package/@apollo/client?activeTab=versions|link>"
                    }
                  ]
                }
              ]
            }
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      HUSKY: 0
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
