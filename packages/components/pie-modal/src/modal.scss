@use '@justeat/pie-design-tokens/dist/jet.scss' as dt;

.c-modal {
    // Custom Property Declarations
    // These are defined here instead of :host to encapsulate them inside Shadow DOM
    $breakpoint-wide: 768px;

    --modal-size-s: 450px;
    --modal-size-m: 600px;
    --modal-size-l: 1080px;

    // The base modal defaults
    --modal-border-radius: var(--dt-radius-rounded-d);
    --modal-font: var(--dt-font-interactive-m-family);
    --modal-bg-color: var(--dt-color-container-default);
    --modal-elevation: var(--dt-elevation-04);

    border-radius: var(--modal-border-radius);
    border: none;
    box-shadow: var(--modal-elevation);
    font-family: var(--modal-font);
    background-color: var(--modal-bg-color);

    padding: 0;

    --modal-max-inline-size: var(--modal-size-m);
    --modal-inline-size: 75%;

    max-inline-size: var(--modal-max-inline-size);
    inline-size: var(--modal-inline-size);

    &[size='small'] {
        --modal-max-inline-size: var(--modal-size-s);
    }

    &[size='medium'] {
        /* Same as default styles */
        &[isfullwidthbelowmid] {
            @media (max-width: $breakpoint-wide) {
                --modal-inline-size: 100%;
            }
        }
    }

    &[size='large'] {
        --modal-max-inline-size: var(--modal-size-l);
        --modal-inline-size: 100%;

        @media (min-width: $breakpoint-wide) {
            --modal-inline-size: 75%;
        }
    }

    // We need to pull in the token directly here because the
    // pseudo element `::backdrop` doesn't seem to pick up custom css properties.
    &::backdrop {
        background: #{dt.$color-overlay};
    }

    & .c-modal-heading {
        // Modal header Custom Props
        --modal-header-font-size: calc(var(--dt-font-heading-m-size--wide) * 1px);
        --modal-header-font-line-height: calc(var(--dt-font-heading-m-line-height--wide) * 1px);
        --modal-header-font-weight: var(--dt-font-heading-m-weight);
        --modal-header-padding: var(--dt-spacing-e);
        --modal-header-padding-block-end: var(--dt-spacing-d);

        font-size: var(--modal-header-font-size);
        line-height: var(--modal-header-font-line-height);
        font-weight: var(--modal-header-font-weight);

        margin: 0;
        padding-block: var(--modal-header-padding) var(--modal-header-padding-block-end);
        padding-inline: var(--modal-header-padding);
    }

    & .c-modal-content {
        // Modal content Custom Props
        --modal-content-font-size: calc(var(--dt-font-size-16) * 1px);
        --modal-content-font-weight: var(--dt-font-weight-regular);
        --modal-content-line-height: calc(var(--dt-font-size-16-line-height) * 1px);
        --modal-content-padding: var(--dt-spacing-e);
        --modal-content-padding-block-start: var(--dt-spacing-a);

        font-size: var(--modal-content-font-size);
        line-height: var(--modal-content-line-height);
        font-weight: var(--modal-content-font-weight);

        padding-block: var(--modal-content-padding-block-start) var(--modal-content-padding);
        padding-inline: var(--modal-content-padding);

        overflow-y: scroll;
        max-block-size: 300px; // This is just a placeholder before we add the proper container styles to slotted content to demonstrate scrollable slot content
    }

    & .c-modal-closeBtn {
        position: absolute;
        inset-inline-end: var(--dt-spacing-d);
        inset-block-start: var(--dt-spacing-d);
    }
}
