@use '@justeattakeaway/pie-css/scss' as p;

:host {
    display: inline-block;

    // Normally we don't expect consumers to override these variables, but there are situations where it may be necessary

    // The base values are set to the size default, which is for the medium button size
    --btn-dimension-default: 48px;

    // Sizing is set to Medium button icon size, as that is the default
    --icon-size-override: 24px;
}

// Base button styles
.o-iconBtn {
    --btn-border-radius: var(--dt-radius-rounded-e);
    --int-states-mixin-bg-color: var(--dt-color-interactive-brand);
    --btn-icon-fill: var(--dt-color-content-interactive-light);
    --icon-display-override: block;

    block-size: var(--btn-dimension, var(--btn-dimension-default));
    inline-size: var(--btn-dimension, var(--btn-dimension-default));

    border-color: var(--btn-border-color);
    border-radius: var(--btn-border-radius);
    background-color: var(--int-states-mixin-bg-color);
    color: var(--btn-icon-fill);
    cursor: pointer;
    user-select: none;
    outline: none;
    border: none;

    display: flex;
    align-items: center;
    justify-content: center;

    &:focus-visible {
        @include p.focus;
    }

    svg {
        height: var(--icon-size-override);
        width: var(--icon-size-override);
    }

    &.o-iconBtn--primary {
        /* Same as default styles */

        @include p.interactive-states('--dt-color-interactive-brand');
    }

    &.o-iconBtn--secondary {
        --int-states-mixin-bg-color: var(--dt-color-interactive-secondary);
        --btn-icon-fill: var(--dt-color-content-interactive-secondary);

        @include p.interactive-states('--dt-color-interactive-secondary');
    }

    &.o-iconBtn--outline {
        --int-states-mixin-bg-color: transparent;
        --btn-icon-fill: var(--dt-color-content-interactive-brand);

        border: 1px solid var(--dt-color-border-strong);

        @include p.interactive-states('--dt-color-transparent', 'transparent');
    }

    &.o-iconBtn--ghost {
        --int-states-mixin-bg-color: transparent;
        --btn-icon-fill: var(--dt-color-content-interactive-brand);

        @include p.interactive-states('--dt-color-transparent', 'transparent');
    }

    &.o-iconBtn--ghost-secondary {
        --int-states-mixin-bg-color: transparent;
        --btn-icon-fill: var(--dt-color-content-interactive-secondary);

        @include p.interactive-states('--dt-color-transparent', 'transparent');
    }

    &.o-iconBtn--inverse {
        --int-states-mixin-bg-color: var(--dt-color-interactive-inverse);
        --btn-icon-fill: var(--dt-color-content-interactive-brand);

        @include p.interactive-states('--dt-color-interactive-inverse');
    }

    &.o-iconBtn--ghost-inverse {
        --int-states-mixin-bg-color: transparent;
        --btn-icon-fill: var(--dt-color-content-inverse);

        @include p.interactive-states('--dt-color-transparent', 'transparent', '02');
    }

    &[disabled] {
        --btn-icon-fill: var(--dt-color-content-disabled);

        cursor: not-allowed;

        // For every variant (except ghost variants) set the disabled background color
        &:not(.o-iconBtn--ghost, .o-iconBtn--ghost-secondary, .o-iconBtn--ghost-inverse) {
            --int-states-mixin-bg-color: var(--dt-color-disabled-01);
        }

        // For outline variants, set the border to the disabled color
        &.o-iconBtn--outline {
            border-color: var(--dt-color-disabled-01);
        }
    }

    &.o-iconBtn--xsmall {
        --btn-dimension: 32px;
        --icon-size-override: 20px;
    }

    &.o-iconBtn--small {
        --btn-dimension: 40px;
    }

    &.o-iconBtn--medium {
        /* Same as default styles */
    }

    &.o-iconBtn--large {
        --btn-dimension: 56px;
        --icon-size-override: 28px;
    }
}
