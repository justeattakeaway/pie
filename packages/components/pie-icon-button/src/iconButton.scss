@mixin button-interactive-states($bg-color) {
    &:hover:not(:disabled) {
        background-color: hsl(var(#{$bg-color}-h), var(#{$bg-color}-s), calc(var(#{$bg-color}-l) - var(--dt-color-hover-01)));
    }

    &:active:not(:disabled) {
        background-color: hsl(var(#{$bg-color}-h), var(#{$bg-color}-s), calc(var(#{$bg-color}-l) - var(--dt-color-active-01)));
    }
}

// Base button styles
.o-iconBtn {
    --btn-border-radius: var(--dt-radius-rounded-e);

    // The base values are set to the size default, which is for the medium button size
    --btn-dimension: 48px;

    // The following values set to default background and color
    // currently this sets the primary button styles
    --btn-bg-color: var(--dt-color-interactive-brand);
    --btn-icon-fill: var(--dt-color-content-interactive-primary);
    --btn-focus: var(--dt-color-focus-outer);

    // Sizing is set to Medium button icon size, as that is the default
    --btn-icon-size: 24px;

    min-block-size: var(--btn-dimension);
    aspect-ratio: 1 / 1;

    @supports not (aspect-ratio: 1 / 1) {
        min-inline-size: var(--btn-dimension);
    }

    border: none;
    border-radius: var(--btn-border-radius);
    outline: none;
    background-color: var(--btn-bg-color);
    color: var(--btn-icon-fill);
    cursor: pointer;
    user-select: none;

    display: flex;
    align-items: center;
    justify-content: center;

    &:focus-visible {
        // TODO - Need to update to use the latest focus styling
        outline: 2px solid var(--btn-focus);
    }

    svg {
        height: var(--btn-icon-size);
        width: var(--btn-icon-size);
    }

    &[variant='primary'] {
        @include button-interactive-states('--dt-color-interactive-brand');
    }

    &[variant='secondary'] {
        --btn-bg-color: var(--dt-color-interactive-secondary);
        --btn-icon-fill: var(--dt-color-content-interactive-secondary);

        @include button-interactive-states('--dt-color-interactive-secondary');
    }

    &[variant='outline'] {
        --btn-bg-color: var(--dt-color-container-default);
        --btn-icon-fill: var(--dt-color-content-interactive-brand);

        & .o-iconBtn {
            border: 1px solid var(--dt-color-border-strong);
        }

        @include button-interactive-states('--dt-color-container-default');
    }

    &[variant='ghost'] {
        --btn-bg-color: var(--dt-color-container-default);
        --btn-icon-fill: var(--dt-color-content-interactive-brand);

        @include button-interactive-states('--dt-color-container-default');
    }

    &[variant='ghost-secondary'] {
        --btn-bg-color: var(--dt-color-container-default);
        --btn-icon-fill: var(--dt-color-content-interactive-secondary);

        @include button-interactive-states('--dt-color-container-default');
    }

    &[disabled] {
        --btn-bg-color: var(--dt-color-disabled-01) !important;
        --btn-icon-fill: var(--dt-color-content-disabled) !important;

        & .o-iconBtn {
            border: 1px solid var(--dt-color-disabled-01);
            cursor: not-allowed;
        }
    }

    &[disabled][variant='outline'] {
        & .o-iconBtn {
            outline: none;
        }
    }

    &[disabled][variant='ghost'],
    &[disabled][variant='ghost-secondary'] {
        --btn-bg-color: transparent;
        --btn-icon-fill: var(--dt-color-content-default);

        & .o-iconBtn {
            outline: none;
            border: none;
        }
    }

    &[size='xsmall'] {
        --btn-dimension: 32px;
    }

    &[size='small'] {
        --btn-dimension: 40px;
    }

    &[size='medium'] {
        /* Same as default styles */
    }

    &[size='large'] {
        --btn-dimension: 56px;
        --btn-icon-size: 28px;
    }
}

