@use '@justeattakeaway/pie-css/scss' as p;
@use '@justeattakeaway/pie-css/scss/settings' as *;

:host {
  --toast-z-index: var(--dt-z-index-toast);
  --toast-offset: var(--dt-spacing-d);

  @include media('>md') {
    --toast-offset: var(--dt-spacing-e);
  }
}

.c-toast {
  --toast-border-radius: var(--dt-radius-rounded-b);
  --toast-background-color: var(--dt-color-container-inverse);
  --toast-font-color: var(--dt-color-content-inverse);
  --toast-font-size: #{p.font-size(--dt-font-body-s-size)};
  --toast-line-height: #{p.line-height(--dt-font-body-s-line-height)};
  --toast-icon-fill: var(--dt-color-content-default);
  --toast-translate-start: -100%;
  --toast-translate-end: 0;

  position: absolute;
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 48px;
  max-height: 122px;
  min-width: 300px;
  max-width: 420px;

  padding: var(--dt-spacing-b) var(--dt-spacing-c) var(--dt-spacing-b) var(--dt-spacing-d);
  border-radius: var(--toast-border-radius);
  background-color: var(--toast-background-color);
  box-shadow: var(--dt-elevation-03);
  color: var(--toast-font-color);
  font-size: var(--toast-font-size);
  line-height: var(--toast-line-height);
  transition-property: all;
  transition-duration: var(--dt-motion-timing-100);
  transition-timing-function: var(--dt-motion-easing-in);
  z-index: var(--toast-z-index);
}

.c-toast--animate-in {
  animation-duration: var(--dt-motion-timing-200);
  animation-name: animate-in;
  animation-timing-function: var(--dt-motion-easing-out);
  transform: translateX(var(--toast-translate-end));
}

.c-toast--animate-out {
  animation-duration: var(--dt-motion-timing-100);
  animation-name: animate-out;
  animation-timing-function: var(--dt-motion-easing-in);
  transform: translateX(var(--toast-translate-start));
  opacity: 0;
}

.c-toast--info {
  --toast-icon-fill: var(--dt-color-support-info-inverse);

  &.c-toast--strong {
    --toast-background-color: var(--dt-color-support-info);
    --toast-icon-fill: var(--dt-color-content-inverse);
  }
}

.c-toast--warning {
  --toast-icon-fill: var(--dt-color-support-warning-inverse);

  &.c-toast--strong {
    --toast-background-color: var(--dt-color-support-warning);
    --toast-icon-fill: var(--dt-color-content-dark);
    --toast-font-color: var(--dt-color-content-dark);
  }
}

.c-toast--success {
  --toast-icon-fill: var(--dt-color-support-positive-inverse);

  &.c-toast--strong {
    --toast-background-color: var(--dt-color-support-positive);
    --toast-icon-fill: var(--dt-color-content-inverse);
  }
}

.c-toast--error {
  --toast-icon-fill: var(--dt-color-support-error-inverse);

  &.c-toast--strong {
    --toast-background-color: var(--dt-color-support-error);
    --toast-icon-fill: var(--dt-color-content-inverse);
  }
}

.c-toast-contentArea {
  display: flex;
  gap: var(--dt-spacing-b);
  justify-content: space-between;
}

.c-toast-messageArea {
  display: flex;
  align-items: center;
  gap: var(--dt-spacing-b);
  padding: 6px var(--dt-spacing-a) 6px 0;
  overflow: hidden;

  span {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
}

.c-toast-actionsArea {
  display: flex;
  gap: var(--dt-spacing-b);
  flex-shrink: 0;
}

.c-toast--multiline {
  .c-toast-contentArea {
    align-items: flex-start;
    gap: 0;
  }

  .c-toast-messageArea {
    align-items: flex-start;
    padding-block-end: var(--dt-spacing-b);

    span {
      max-height: 60px;
      white-space: inherit;

      // text-overflow: ellipsis; for multiline lines only works using webkit prefix
      /* stylelint-disable */
      display: -webkit-box;
      /* stylelint-enable */
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
    }
  }
}

.c-toast-footer {
  display: flex;
  justify-content: flex-end;
}

.c-toast-icon {
  color: var(--toast-icon-fill);
}

.c-toast--position-default {
  inset-inline-start: var(--toast-offset);
  inset-block-end: var(--toast-offset);
}

.c-toast--position-bottom-left {
  left: var(--toast-offset);
  bottom: var(--toast-offset);
}

.c-toast--position-bottom-right {
  right: var(--toast-offset);
  bottom: var(--toast-offset);
}

.c-toast--position-bottom-center {
  --toast-translate-start: -50%, 100%;
  --toast-translate-end: -50%, 0;

  left: 50%;
  bottom: var(--toast-offset);
  transform: translateX(-50%);
}

.c-toast--rtl,
.c-toast--position-bottom-right {
  --toast-translate-start: 100%;
}

@keyframes animate-in {
  from {
    transform: translate(var(--toast-translate-start));
  }

  to {
    transform: translate(var(--toast-translate-end));
  }
}

@keyframes animate-out {
  from {
    transform: translate(var(--toast-translate-end));
  }

  to {
    transform: translate(var(--toast-translate-start));
  }
}
