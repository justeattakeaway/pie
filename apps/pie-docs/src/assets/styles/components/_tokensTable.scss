@use '../fozzie-config' as f;
@use '../variables' as v;

$tokensTable-column-padding: var(--dt-spacing-d);
$tokensTable-border-width: 1px;
$tokensTable-spacing-container-height: 176px;
$tokensTable-spacing-radius-height: 176px;
$tokensTable-item-min-height: 128px;
$tokensTable-item-vertical-padding: var(--dt-spacing-e);

.c-tokensTable-list {
    list-style: none;
    padding: 0;
    margin-block-start: var(--dt-spacing-f);
    margin-block-end: 0;
    margin-inline: 0;
    width: 100%;

    @include f.media('>=wide') {
        margin-block-start: 0;
    }
}

.c-tokensTable-example-container--spacing {
    background-color: f.$color-background-subtle;
    position: relative;
    min-height: $tokensTable-spacing-container-height;

    @include f.media('>=wide') {
        background-color: f.$color-background-default;
        min-height: calc($tokensTable-item-min-height - calc($tokensTable-item-vertical-padding * 2));

        @include f.media('>=wide') {
            justify-self: start;
            align-self: start;
        }
    }
}

.c-tokensTable-example-container--elevation {
    background-color: var(--example-container);
    position: relative;
    min-height: 160px;

    @include f.media('>=wide') {
        min-height: calc($tokensTable-item-min-height - calc($tokensTable-item-vertical-padding * 2));
        justify-self: start;
        align-self: start;
        min-width: 152px;
        border-radius: f.$radius-03;
    }
}

.c-tokensTable-example-container--radius {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: f.$color-background-subtle;
    min-height: $tokensTable-spacing-radius-height;

    @include f.media('>=wide') {
        display: block;
        background-color: transparent;
        min-height: 80px;
    }
}

.c-tokensTable-example {
    background-color: var(--example-background-color, f.$color-background-subtle);
    overflow: hidden;
    min-height: $tokensTable-item-min-height;

    @include f.media('>=wide') {
        border-radius: f.$radius-03;
        min-height: 80px;
    }
}

.c-tokensTable-example--bordered {
    @include f.media('>=wide') {
        border: $tokensTable-border-width solid f.$color-border-default;
    }
}

.c-tokensTable-example--checked {
    background-color: f.$color-container-default;
    background-image:
        linear-gradient(45deg, f.$color-dark-content-subdued 25%, transparent 25%, transparent 75%, f.$color-dark-content-subdued 75%, f.$color-dark-content-subdued),
        linear-gradient(45deg, f.$color-dark-content-subdued 25%, transparent 25%, transparent 75%, f.$color-dark-content-subdued 75%, f.$color-dark-content-subdued);
    background-size: 20px 20px;
    background-position: 0 0, 30px 30px;
    position: relative;

    &:before {
        content: '';
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        background-color: var(--example-background-color);
        position: absolute;
        opacity: var(--example-checked-opacity);
    }
}

.c-tokensTable-example--spacing {
    // calculates the vertical positioning of the spacing examples (always slightly off-centre)
    --base-negative-space: calc((#{$tokensTable-spacing-container-height} - var(--example-spacing)) / 2);
    background-color: f.$color-content-default;
    opacity: 0.1;
    width: var(--example-spacing);
    height: var(--example-spacing);
    border-radius: 2px;
    margin-block: 0;
    margin-inline: auto;
    left: 0;
    right: 0;
    position: absolute;
    bottom: calc(var(--base-negative-space) - 8px);
    top: calc(var(--base-negative-space) + 8px);

    @include f.media('>=wide') {
        bottom: 0;
        top: 0;
    }
}

.c-tokensTable-example--elevation {
    background-color: var(--example-elevation);
    width: var(--dt-spacing-i);
    height: var(--dt-spacing-i);
    border-radius: f.$radius-03;
    margin-block: 0;
    margin-inline: auto;
    left: 0;
    right: 0;
    position: absolute;
    bottom: var(--dt-spacing-g);
    top: var(--dt-spacing-h);
    box-shadow: var(--example-shadow);

    @include f.media('>=wide') {
        bottom: var(--dt-spacing-e);
        top: var(--dt-spacing-e);
        width: var(--dt-spacing-f);
        height: var(--dt-spacing-f);
    }
}

.c-tokensTable-example--radius {
    width: 80px;
    height: 80px;
    margin-block-start: var(--dt-spacing-d);
    background-color: f.$color-background-dark;
    border-radius: var(--example-radius);
    opacity: 0.1;

    @include f.media('>=wide') {
        margin-block-start: 0;
    }
}

.c-tokensTable-example--font {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 184px;
    padding-block-start: var(--dt-spacing-i);
    padding-block-end: var(--dt-spacing-g);
    padding-inline: 0;
    background-color: f.$color-background-subtle;
    color: f.$color-content-default;
    font-family: var(--example-font-family);
    font-size: var(--example-font-size);
    line-height: var(--example-font-line-height);
    font-weight: var(--example-font-weight);
    text-decoration: var(--example-font-text-decoration);
    letter-spacing: var(--example-font-letter-spacing);

    &.c-tokenTable-example-paragraph--font > p {
        margin-block-start: 0;
        margin-block-end: var(--example-font-paragraph-spacing);
    }

    @include f.media('>=wide') {
        padding: 0;
        display: block;
        min-height: auto;
        background-color: f.$color-background-default;
    }
}

.c-tokensTable-displayName {
    color: f.$color-content-default;
    font-weight: f.$font-weight-bold;
    margin-block-end: var(--dt-spacing-b);
}

.c-tokensTable-tokenDescription {
    @include f.font-size('body-s');
}

.c-tokensTable-heading {
    font-weight: f.$font-weight-bold;
    @include f.font-size('body-s');
    color: f.$color-content-subdued;
}

.c-tokensTable-row {
    display: grid;
    column-gap: $tokensTable-column-padding;
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr;
    overflow: hidden;

    & + & {
        margin-block-start: var(--dt-spacing-e);
    }

    @include f.media('>=wide') {
        grid-template-columns: var(--template-columns) 1fr minmax(min-content, max-content);
        grid-template-rows: 1fr;

        & + & {
            margin-block-start: 0;
        }
    }
}

.c-tokensTable-item {
    position: relative;
    padding: 0;
    border: $tokensTable-border-width solid f.$color-border-default;
    border-radius: f.$radius-03;

    @include f.media('>=wide') {
        padding-block: $tokensTable-item-vertical-padding;
        padding-inline: 0;
        border-radius: 0;
        border-width: 0 0 $tokensTable-border-width 0;

        // Any final token item at the end of a parent category list should not have a bottom border
        // In pages where there are no parent categories,
        // there should not be a bottom border on the final item in each list either
        &:last-of-type:not(.c-tokensTable-sectionSubheading ~ .c-tokensTable-list .c-tokensTable-item),
        .c-tokensTable-list:has(+ hr) &:last-of-type {
            border-width: 0;
            padding-bottom: 0;
        }
    }
}

.c-tokensTable-content {
    padding: $tokensTable-column-padding;
    background-color: f.$color-container-default;

    > * {
        display: block;
    }

    .c-tokensTable-token--list {
        margin-inline-end: var(--dt-spacing-a);
        margin-block-end: var(--dt-spacing-a);
    }

    @include f.media('>=wide') {
        padding: 0;
        background-color: f.$color-background-default;

        .c-tokensTable-token--list {
            margin-inline-end: var(--dt-spacing-b);
            margin-block-end: var(--dt-spacing-b);
        }
    }
}

.c-tokensTable-token {
    display: inline-block;
    background-color: f.$color-container-dark;
    color: f.$color-dark-content-default;
    height: min-content;
    border: 1px solid f.$color-border-subtle;
    border-radius: f.$radius-03;
    padding-block: calc(var(--dt-spacing-a) / 2);
    padding-inline: var(--dt-spacing-a);
    @include f.font-size('body-s');
}

.c-tokensTable-token--light {
    background-color: f.$color-container-strong;
    color: f.$color-content-default;
    border: none;
}

// .c-tokensTable-token elements sitting adjacent to examples or example containers
// should be absolutely positioned as follows
[class^='c-tokensTable-example'] ~ .c-tokensTable-token {
    position: absolute;
    top: var(--dt-spacing-d);
    left: var(--dt-spacing-d);

    @include f.media('>=wide') {
        position: static;
        border-width: 0;
    }
}

.c-tokensTable-sectionHeading,
.c-tokensTable-sectionDescription,
.c-tokensTable-sectionSubheading {
    max-width: v.$typography-content-max-width;
}

.c-tokensTable-sectionSubheading {
    margin-block-start: var(--dt-spacing-f);

    &:not(:first-of-type) {
        padding-block-start: var(--dt-spacing-f);
        box-shadow:
            inset 0 -3px 2px 2px f.$color-background-default,
            inset 1px 0 1px 1px f.$color-border-default;

        @include f.media('>=mid') {
            box-shadow:
                inset 32px -3px 2px 2px f.$color-background-default,
                inset 1px 0 1px 1px f.$color-border-default;
        }

        @include f.media('>=wide') {
            padding-block-start: 0;
            box-shadow: none;
        }
    }
}

.c-tokensTable-sectionDescription + .c-tokensTable-sectionSubheading {
    box-shadow: none;
}
